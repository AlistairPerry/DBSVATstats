function [VATstatsall] = calculateVATstats(STNparcdir,outputfile)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

%Required arguments:
    %STNparcdir=Directory containing files corresponding to STN zones
    %output=Filename for extracted data table 

%required software dependencies:
%NBS
%NIFTI: https://au.mathworks.com/matlabcentral/fileexchange/8797-tools-for-nifti-and-analyze-image

%make sure you are within /Lab_MichaelB/PhilM/VAT_Data_New (or another
%folder that contains leadDBS output files)

%setup working and subjects directories
workingdirectory = pwd;
files = dir(workingdirectory);
dirFlags=[files.isdir];
subFolders=files(dirFlags);
subFolders(1:2)=[];

%load in STN parcels

[~,STNmotorRdata]=read([STNparcdir '/' 'LEAD_DBS_STN_motor_RIGHT.nii']);

[~,STNmotorLdata]=read([STNparcdir '/' 'LEAD_DBS_STN_motor_LEFT.nii']);

[~,STNassocLdata]=read([STNparcdir '/' 'LEAD_DBS_STN_associative_LEFT.nii']);

[~,STNassocRdata]=read([STNparcdir '/' 'LEAD_DBS_STN_associative_RIGHT.nii']);

[~,STNlimbicRdata]=read([STNparcdir '/' 'LEAD_DBS_STN_limbic_RIGHT.nii']);

[~,STNlimbicLdata]=read([STNparcdir '/' 'LEAD_DBS_STN_limbic_LEFT.nii']);

%now the STN centroids

[STNmotorRdataCOG,~]=extract_roi([STNparcdir '/' 'LEAD_DBS_STN_motor_RIGHT.nii']);

[STNmotorLdataCOG,~]=extract_roi([STNparcdir '/' 'LEAD_DBS_STN_motor_LEFT.nii']);

[STNassocLdataCOG,~]=extract_roi([STNparcdir '/' 'LEAD_DBS_STN_associative_LEFT.nii']);

[STNassocRdataCOG,~]=extract_roi([STNparcdir '/' 'LEAD_DBS_STN_associative_RIGHT.nii']);

[STNlimbicRdataCOG,~]=extract_roi([STNparcdir '/' 'LEAD_DBS_STN_limbic_RIGHT.nii']);

[STNlimbicLdataCOG,~]=extract_roi([STNparcdir '/' 'LEAD_DBS_STN_limbic_LEFT.nii']);

%extract their voxels
[STNmotorRvoxs]=find(STNmotorRdata==1);

[STNmotorLvoxs]=find(STNmotorLdata==1);

[STNassocRvoxs]=find(STNassocRdata==1);

[STNassocLvoxs]=find(STNassocLdata==1);

[STNlimbicRvoxs]=find(STNlimbicRdata==1);

[STNlimbicLvoxs]=find(STNlimbicLdata==1);

%load all subjects VATS and extract
for s = 1:length(subFolders)
    VATindivstats=[];
    
    currentSubj= subFolders(s,1).name;
    currentSubjDir = char([workingdirectory '/' currentSubj]);
    
    %parse VAT file strings
    %remove LEAD_DBS from ID strings
    VATsubjids{s,1} = currentSubj(10:end);
    
    SubjRVATfile=[currentSubjDir '/' 'rLEAD_DBS_VAT_RIGHT.nii'];
    [RVAThdr,RVATdata]=read(SubjRVATfile);
    
    SubjLVATfile=[currentSubjDir '/' 'rLEAD_DBS_VAT_LEFT.nii'];
    [LVAThdr,LVATdata]=read(SubjLVATfile);
    
    %calculate proportion of stimulation field in each STN zone
    [r1]=find(RVATdata==1);
    [l1]=find(LVATdata==1);
    
    %Right Motor
    
    cors=ismember(r1,STNmotorRvoxs);
    
    if isempty(cors)
        Rmotoroverlap=0;
        Rmotorperc=0;
    else
        Rmotoroverlap=find(cors==1);
        Rmotorperc=[length(Rmotoroverlap)./length(STNmotorRvoxs)]*100;
    end
    
    %Left Motor
    
    cors=ismember(l1,STNmotorLvoxs);
    
    if isempty(cors)
        Lmotoroverlap=0;
        Lmotorperc=0;
    else
        Lmotoroverlap=find(cors==1);
        Lmotorperc=[length(Lmotoroverlap)./length(STNmotorLvoxs)]*100;
    end
    
    %Right Assoc
    
    cors=ismember(r1,STNassocRvoxs);
    
    if isempty(cors)
        Rassocoverlap=0;
        Rassocperc=0;
    else
        Rassocoverlap=find(cors==1);
        Rassocperc=[length(Rassocoverlap)./length(STNassocRvoxs)]*100;
    end
    
    %Left Assoc
    
    cors=ismember(l1,STNassocLvoxs);
    
    if isempty(cors)
        Lassocoverlap=0;
        Lassocperc=0;
    else
        Lassocoverlap=find(cors==1);
        Lassocperc=[length(Lassocoverlap)./length(STNassocLvoxs)]*100;
    end
    
    %Right Limbic
    
    cors=ismember(r1,STNlimbicRvoxs);

    if isempty(cors)
    Rlimbicoverlap=0;
    Rlimbicperc=0;
    else
    Rlimbicoverlap=find(cors==1);
    Rlimbicperc=[length(Rlimbicoverlap)./length(STNlimbicRvoxs)]*100;
    end

    %Left Limbic

    cors=ismember(l1,STNlimbicLvoxs);

    if isempty(cors)
    Llimbicoverlap=0;
    Llimbicperc=0;
    else
    Llimbicoverlap=find(cors==1);
    Llimbicperc=[length(Llimbicoverlap)./length(STNlimbicLvoxs)]*100;
    end
 
%Euclidean Distances    
%Calculate subject centroids first

[subjLSTNCOG,~]=extract_roi([SubjLVATfile]);
[subjRSTNCOG,~]=extract_roi([SubjRVATfile]);

DisSTNMotorR=sqrt(abs([(STNmotorRdataCOG(1,1)-subjRSTNCOG(1,1))*(STNmotorRdataCOG(1,1)-subjRSTNCOG(1,1))]+[(STNmotorRdataCOG(1,2)-subjRSTNCOG(1,2))*(STNmotorRdataCOG(1,2)-subjRSTNCOG(1,2))]+[(STNmotorRdataCOG(1,3)-subjRSTNCOG(1,3))*(STNmotorRdataCOG(1,3)-subjRSTNCOG(1,3))]));
DisSTNMotorL=sqrt(abs([(STNmotorLdataCOG(1,1)-subjLSTNCOG(1,1))*(STNmotorLdataCOG(1,1)-subjLSTNCOG(1,1))]+[(STNmotorLdataCOG(1,2)-subjLSTNCOG(1,2))*(STNmotorLdataCOG(1,2)-subjLSTNCOG(1,2))]+[(STNmotorLdataCOG(1,3)-subjLSTNCOG(1,3))*(STNmotorLdataCOG(1,3)-subjLSTNCOG(1,3))]));

DisSTNAssocR=sqrt(abs([(STNassocRdataCOG(1,1)-subjRSTNCOG(1,1))*(STNassocRdataCOG(1,1)-subjRSTNCOG(1,1))]+[(STNassocRdataCOG(1,2)-subjRSTNCOG(1,2))*(STNassocRdataCOG(1,2)-subjRSTNCOG(1,2))]+[(STNassocRdataCOG(1,3)-subjRSTNCOG(1,3))*(STNassocRdataCOG(1,3)-subjRSTNCOG(1,3))]));
DisSTNAssocL=sqrt(abs([(STNassocLdataCOG(1,1)-subjLSTNCOG(1,1))*(STNassocLdataCOG(1,1)-subjLSTNCOG(1,1))]+[(STNassocLdataCOG(1,2)-subjLSTNCOG(1,2))*(STNassocLdataCOG(1,2)-subjLSTNCOG(1,2))]+[(STNassocLdataCOG(1,3)-subjLSTNCOG(1,3))*(STNassocLdataCOG(1,3)-subjLSTNCOG(1,3))]));

DisSTNLimbicR=sqrt(abs([(STNlimbicRdataCOG(1,1)-subjRSTNCOG(1,1))*(STNlimbicRdataCOG(1,1)-subjRSTNCOG(1,1))]+[(STNlimbicRdataCOG(1,2)-subjRSTNCOG(1,2))*(STNlimbicRdataCOG(1,2)-subjRSTNCOG(1,2))]+[(STNlimbicRdataCOG(1,3)-subjRSTNCOG(1,3))*(STNlimbicRdataCOG(1,3)-subjRSTNCOG(1,3))]));
DisSTNLimbicL=sqrt(abs([(STNlimbicLdataCOG(1,1)-subjLSTNCOG(1,1))*(STNlimbicLdataCOG(1,1)-subjLSTNCOG(1,1))]+[(STNlimbicLdataCOG(1,2)-subjLSTNCOG(1,2))*(STNlimbicLdataCOG(1,2)-subjLSTNCOG(1,2))]+[(STNlimbicLdataCOG(1,3)-subjLSTNCOG(1,3))*(STNlimbicLdataCOG(1,3)-subjLSTNCOG(1,3))]));

%Combine individual VAT overlap stats into single matrix    
VATindivoverlapstats=cat(2, Rmotorperc, Lmotorperc, Rassocperc, Lassocperc,Rlimbicperc,Llimbicperc);

%Combine individual VAT distance stats into single matrix    

VATindivdiststats=cat(2, DisSTNMotorR, DisSTNMotorL, DisSTNAssocR, DisSTNAssocL, DisSTNLimbicR, DisSTNLimbicL);

%And then full subject matrix
VATindivstats=cat(2,VATindivoverlapstats,VATindivdiststats);
VATstatsall(s,:)=VATindivstats;

end

%Now write VAT stats to output matrix

fid = fopen([outputfile], 'wt');

fprintf(fid, '%s\t%s\t%s\t%s\t%s\t%s\t%s\n', 'ID', 'Rmotorperc','Lmotorperc','Rassocperc','Lassocperc','Rlimbicperc','Llimbicperc');
for s = 1:length(subFolders)
    fprintf(fid, '%s\t%f\t%f\t%f\t%f\t%f\t%f\n', VATsubjids{s,1},VATstatsall(s,1),VATstatsall(s,2),VATstatsall(s,3),VATstatsall(s,4),VATstatsall(s,5),VATstatsall(s,6));
end
fclose(fid)

%done!
end

